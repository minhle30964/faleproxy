name: Faleproxy CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  # Test job: Runs all tests to ensure code quality
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      id: run-tests
      run: npm run test:ci
      
    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage/
        
    # Create a job summary with test results
    - name: Create job summary
      run: |
        echo "## Test Results âœ…" >> $GITHUB_STEP_SUMMARY
        echo "All tests have passed successfully." >> $GITHUB_STEP_SUMMARY
        echo "Ready for deployment to production." >> $GITHUB_STEP_SUMMARY
        
  # The deploy job will only run when:
  # 1. All tests have passed successfully (needs: test ensures this)
  # 2. The commit is on the main or master branch
  deploy:
    needs: test # This ensures deploy only runs when tests pass
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        
    - name: Install Vercel CLI
      run: npm install --global vercel@latest
      
    - name: Pull Vercel Environment Information
      run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      
    # Add a deployment status to the summary
    - name: Update deployment status
      run: |
        echo "## Deployment Status ðŸš€" >> $GITHUB_STEP_SUMMARY
        echo "Preparing to deploy to Vercel production environment." >> $GITHUB_STEP_SUMMARY
      
    - name: Build Project Artifacts
      run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      
    - name: Deploy Project Artifacts to Vercel
      id: deploy
      run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
      
    # Add deployment confirmation to the summary
    - name: Deployment confirmation
      run: |
        echo "## Deployment Complete âœ¨" >> $GITHUB_STEP_SUMMARY
        echo "Faleproxy has been successfully deployed to production." >> $GITHUB_STEP_SUMMARY
